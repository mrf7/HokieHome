Socket IO Syntax:

Events: 

Light-Server Communication Events: 
    "changeBrightness" Server->Light 
        changes brightness of light
        data: int  
    "lightIdent" Light->Server
        Sent by light on connection, identifies the light with id, room
        If light hasn't been set up, room will be !NOROOM
        data: json object
        ex format: {"id": 1
                    "room": "Living Room"}
    "setRoom" server-> Light
        Sets up a light by telling it to remember a room
        Set up lights will replace their current room with the new room
        data: String
    "reset": Server->Light
        Tells the light to forget its room
        data: none
    


"Create" for creating objects
		Json format:
		Adding User
			"Action" - "Add"
			"Object" - "User"
			"Name" - The User's Username
			"Pass" - The User's Password
			"PreBright" - The User's Prefered Brightness
	    Adding Lights
			"Action" - "Add"
			"Object" - "Light"
			"Room" - room name that holds it
			"Name" - light mac address
		Adding Room
			"Action" - "Add"
			"Object" - "Room"
			"Name" - Room name
		Adding Dash Button
			"Action" - "Add"
			"Object" - "Dash"
			"Name" - dash button's mac address
			"Lights" - arraylist of lights that it controls

"Command" for commands pertaining to objects
		Json Format:
		Enter Room
			"Action" - "Enter"
			"Object" - "Room"
			"Brightness" - User Prefered Brightness (could just be held server side)
			"Name" - room name